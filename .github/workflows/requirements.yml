name: java-build-security-docker

on:
  workflow_call:
    inputs:
      dockerhub-repo:
        description: "Nombre completo del repo DockerHub"
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  setup:
    name: üß± Build & Test Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

  test:
    name: ‚úÖ Run Tests
    runs-on: ubuntu-latest
    needs: setup

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: taskmanagerdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Wait for PostgreSQL to be ready
        run: sleep 15

      - name: Test with Maven
        run: mvn clean verify

  sonar:
    name: üìä SonarCloud Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: AngelRod-cyber_TaskBackend-grupo5   
          SONAR_ORGANIZATION: angelrod-cyber                   

  docker-build:
    name: üê≥ Build Docker Image
    runs-on: ubuntu-latest
    needs: sonar

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Docker image
        run: docker build -t ${{ inputs.dockerhub-repo }}:latest .

  trivy-scan:
    name: üîç Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.dockerhub-repo }}:latest
          format: 'table'
          exit-code: '0'  # cambia a '1' si deseas que falle en vulnerabilidades
          ignore-unfixed: true

  docker-push:
    name: üöÄ Push to DockerHub
    runs-on: ubuntu-latest
    needs: trivy-scan

    steps:
      - name: DockerHub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ inputs.dockerhub-repo }}:latest
